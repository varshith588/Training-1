- React is mainly used to create single page applications.

what is virtual DOM ?
- Virtual DOM is a virtual representation of a UI which is kept in a memory later 
    synced with Real DOM with the help of a library called "ReactDOM".

- The updation of real dom with virtual DOM.

- the entire process of updating the realDOM with the help of VDOM is called as "Reconcialtion".

JSX:-
*****
- JSX stands for Javascript and XML.
- JSX is a javascript syntax extension used to create HTML-like markup in the react.
- Actual way to create a element in react is by using a method called as,
        - React.createElement("tagname" , {property:"value"}/null , content/children)
         let ele  = React.createElement("div" , {className:"App"} , 
    React.createElement("h1" ,null, "Header")
  );

- JSX is not a part of react but it is recomended to use in react.

Rules of JSX:-
**************
1.every element irrespective of paired/unpaired tag both must be closed.
ex:-  <h1></h1> , <input/>
2.more than one jsx element is used then they must wrapped with one parent element.
ex:- <div>
        <h1></h1>
        <p></p>
        </div>

JSX expression:-
****************
- JSX expression is used to call the variable , mathematical expressio inside the element.
syntax :- <h1>{variable/expression}</h1>

components:-
************
- components are the files/modules which consist of js related logics which can be reuse.

components are divided into two types:-
1.class based components(CBC)
2.fucntional based components(FBC)


1.class based components(CBC):-
*******************************
- CBC is simlar to javscript es6 class.
- CBC are "statefull" component because of default  state object present inside the class.
syntax:-

 class Person{
    constructor(name , age){
        this.name=name;
        this.age=age;
    }
 }

class Child extends Person{
    constructor(name , age , city){
        super(name , age);
        this.city=city;
    }
}

syntax :- 
class App extends React.Component{
    render(){
        return(
            //JSX
        )
    }
}
export default App;

2.functional based component:-
******************************
- FBC are similar to JS functions.
- FBC are "stateless" because there is no state object untill react v16.8.

syntax :-  function App(){
                return(

                )
            }
            export default App;

            OR
            const App=()=>{
                return(
                    //jsx
                )
            }
            export default App;

Notee :- while ctreating a react compoennt the names must be started with capital letters.
- extension of a component file must be .jsx/.js
- How to call a component.
    <App/> / <App></App>

component omposition:-
**********************
- component composition is used to combine multiple components into single application.


Props:-
*******
- props is nothing but a properties similar to html attributes.
- props is an object.
- props is an object used to exchange information/data from parent component to child component.


props children:-

props drilling:-

state:-
******
- state is an mutable object which is used to store / isolate the data inside the component 








function component:-
- by default functional component stateless because there is no state object.
- in react v16.8 , they introduce a concept called as "Hooks".
syntax :- const[state , setState] = 

Hooks:- hooks is nothing but a function which implement all the features of class component.

basics hooks are:-
1.usestate()
2.useEffect()
3.useContext()

2.useEffect():-
-------------
- it allows developer to make necessaty changes / side effects inside the component.
syntax:- useEffect(callbackfn, dependency);



list & keys :- every listem item from the array should hava unique key prop  value so it can 
track all the changes done in the list